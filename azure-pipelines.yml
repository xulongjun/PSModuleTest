trigger:
- none

parameters:
  - name: MajorVersion
    displayName: MajorVersion of the module
    type: number
  - name: MinorVersion
    displayName: MinorVersion of the package 
    type: number

pool:
  vmImage: windows-latest

variables:
  version: ${{parameters.MajorVersion}}.${{parameters.MinorVersion}}.$(Year:yy)$(DayOfYear)$(Rev:rr)

steps:

- task: PowerShell@2 
  displayName: Install Modules
  name: installmodules
  inputs:
    pwsh: true
    targetType: filePath
    filePath: $(Build.SourcesDirectory)/Install-Requirements.ps1

- task: PowerShell@2
  displayName: Build Module
  name: modulebuilder
  inputs:
    pwsh: true
    targetType: filePath
    filePath: $(Build.SourcesDirectory)/Start-ModuleBuild.ps1
    arguments: -version $(version)

- task: PowerShell@2
  displayName: Build Nuget
  name: buildnuget
  inputs:
    pwsh: true
    targetType: filePath
    filePath: $(Build.SourcesDirectory)/Start-NugetBuild.ps1
    arguments: -version $(version)

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  name: publishartifact
  inputs:
    ArtifactName: module
    PathtoPublish: $(Build.SourcesDirectory)/Output

- task: NuGetCommand@2
  displayName: Publish to Nuget PsModuleTest
  name: publishnuget1
  inputs:
    command: push
    packagesToPush: $(Build.SourcesDirectory)/Output/Nuget/*.nupkg
    publishVstsFeed: LongjunTest/PsModuleTest

# - task: NuGetCommand@2
#   displayName: Publish to Nuget PsModuleTest2
#   name: publishnuget2
#   inputs:
#     command: push
#     packagesToPush: $(Build.SourcesDirectory)/Output/Nuget/*.nupkg
#     publishVstsFeed: 'testServiceCon'
  